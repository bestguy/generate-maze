{"version":3,"sources":["webpack://generateMaze/webpack/universalModuleDefinition","webpack://generateMaze/./src/cjs-wrapper.js","webpack://generateMaze/./src/generate-maze.js","webpack://generateMaze/webpack/bootstrap","webpack://generateMaze/webpack/runtime/define property getters","webpack://generateMaze/webpack/runtime/hasOwnProperty shorthand","webpack://generateMaze/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","initial","array","slice","range","n","end","Array","from","keys","map","k","uniq","Set","populateMissingSets","row","random","setsInUse","set","filter","Boolean","availableSets","c","length","d","reduce","a","b","includes","sort","box","forEach","i","mergeRandomSetsIn","probability","current","x","next","differentSets","shouldMerge","oldSet","newSet","mergeSetWith","right","left","width","height","closed","seed","t","Math","imul","mulberry32","maze","r","y","top","bottom","push","nextRow","setsInRow","Object","values","list","key","dict","item","prev","groupBy","ceil","index","lastIndex","result","rand","floor","value","sampleSize","exit","below","addSetExits","lastRow","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"mappings":"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","file":"generate-maze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"generateMaze\"] = factory();\n\telse\n\t\troot[\"generateMaze\"] = factory();\n})(self, function() {\nreturn ","// Wrapping as CommonJS module to avoid clients having to use maze.default:\nmodule.exports = require('./generate-maze.js').default;\n","function compact(array) {\n  return array.filter(Boolean);\n}\nfunction difference(c, d) {\n  return [c, d].reduce((a, b) => a.filter(c => !b.includes(c)));\n}\nfunction initial(array) {\n  return array.slice(0, -1);\n}\nfunction groupBy(list, key) {\n  const keys = list.map(item => item[key]);\n  let dict = uniq(keys).reduce((prev, next) => {\n    return {\n      ...prev,\n      [next]: []\n    }\n  }, {});\n\n  list.forEach(item => dict[item[key]].push(item));\n\n  return dict;\n}\nfunction last(array) {\n  return array[array.length - 1];\n}\nfunction range(n, end = 0) {\n  return end ? Array.from(Array(end - n).keys()).map(k => k + n) : Array.from(Array(n).keys());\n}\nfunction uniq(array) {\n  return [...new Set(array)]\n}\nfunction sampleSize(array, n, random) {\n  n = n == null ? 1 : n\n  const length = array == null ? 0 : array.length\n  if (!length || n < 1) {\n    return []\n  }\n  n = n > length ? length : n\n  let index = -1\n  const lastIndex = length - 1\n  const result = [...array];\n  while (++index < n) {\n    const rand = index + Math.floor(random() * (lastIndex - index + 1))\n    const value = result[rand]\n    result[rand] = result[index]\n    result[index] = value\n  }\n  return result.slice(0, n)\n}\n\nfunction mulberry32(seed) {\n  return function () {\n    let t = seed += 0x6D2B79F5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n  }\n}\n\nfunction mergeSetWith(row, oldSet, newSet) {\n  row.forEach(box => {\n    if (box.set === oldSet) box.set = newSet;\n  });\n}\n\nfunction populateMissingSets(row, random) {\n  const setsInUse = compact(uniq(row.map(row => row.set)));\n  const allSets = range(1, row.length + 1);\n  const availableSets = difference(allSets, setsInUse).sort(() => 0.5 - random());\n  row.filter(box => !box.set).forEach((box, i) => box.set = availableSets[i]);\n}\n\nfunction mergeRandomSetsIn(row, random, probability = 0.5) {\n  // Randomly merge some disjoint sets\n  const allBoxesButLast = initial(row);\n  allBoxesButLast.forEach((current, x) => {\n    const next = row[x + 1];\n    const differentSets = current.set !== next.set;\n    const shouldMerge = random() <= probability;\n    if (differentSets && shouldMerge) {\n      mergeSetWith(row, next.set, current.set);\n      current.right = false;\n      next.left = false;\n    }\n  });\n}\n\nfunction addSetExits(row, nextRow, random) {\n  // Randomly add bottom exit for each set\n  const setsInRow = Object.values(groupBy(row, 'set'));\n  const { ceil } = Math;\n  setsInRow.forEach(set => {\n    const exits = sampleSize(set, ceil(random() * set.length), random);\n    exits.forEach(exit => {\n      if (exit) {\n        const below = nextRow[exit.x];\n        exit.bottom = false;\n        below.top = false;\n        below.set = exit.set;\n      }\n    });\n  });\n}\n\nfunction generate(width = 8, height = width, closed = true, seed = 1) {\n  const random = mulberry32(seed);\n  const maze = [];\n  const r = range(width);\n\n  // Populate maze with empty cells:\n  for (let y = 0; y < height; y += 1) {\n    const row = r.map(x => {\n      return {\n        x,\n        y,\n        top: closed || y > 0,\n        left: closed || x > 0,\n        bottom: closed || y < (height - 1),\n        right: closed || x < (width - 1)\n      };\n    });\n    maze.push(row);\n  }\n\n  // All rows except last:\n  initial(maze).forEach((row, y) => { // TODO initial temp?\n    populateMissingSets(row, random);\n    mergeRandomSetsIn(row, random);\n    addSetExits(row, maze[y + 1], random);\n  });\n\n  const lastRow = last(maze);\n  populateMissingSets(lastRow, random);\n  mergeRandomSetsIn(lastRow, random, 1);\n\n  return maze;\n}\n\nexport default generate;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"sourceRoot":""}